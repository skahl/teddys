/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.teddys.network;

import edu.teddys.objects.box.items.Item;
import edu.teddys.objects.Jetpack;
import edu.teddys.objects.weapons.Weapon;
import java.awt.Point;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 *
 * @author cm
 */
public class Client implements EncryptionAvailableInterface {
  
  /**
   * Autogenerated on demand.
   */
  private Integer id;
  /**
   * Team allocation if available.
   */
  private Team team;
  /**
   * The current Health Points ranging from 0 to 100.
   */
  private Integer health = 100;
  /**
   * Server ip the client uses for the gameplay.
   */
  private String serverIP;
  /**
   * Public key of the server for the encryption.
   */
  private String pubKeyServer;
  /**
   * Indicates whether a server connection is active.
   */
  private boolean currentConnection = false;
  /**
   * Information when the client has connected to the server.
   */
  private Date joinedServer;
  /**
   * Displayed name.
   */
  private String name;
  /**
   * Position in the current map. 
   */
  private Point position = new Point();
//  private Map map;
  private Jetpack jetpack = new Jetpack();
  /**
   * The client can only handle one item which is bound to the user, so save it here.
   */
  private Item currentItem;
  /**
   * The list of achieved weapons. Initially, there's always the simple gun available.
   */
  private List<Weapon> weapons = new ArrayList<Weapon>();
  /**
   * Index in the weapon list for the current weapon.
   */
  private Integer currentWeapon;
  /**
   * The last 10 pings to the server. This is used for statistical and game-dependent
   * issues. For example, the server balancing or anti-lagging.
   */
  private List<Integer> lastPings = new ArrayList<Integer>();
  /**
   * Session-related information, that is the number of deaths, kills, rounds etc.
   */
  private SessionClientData session;
}
